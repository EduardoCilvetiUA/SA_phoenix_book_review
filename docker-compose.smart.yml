services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: phoenix_book_review_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    build: .
    ports:
      - "${PHX_PORT}:${PHX_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PHX_PORT=${PHX_PORT}
      - MIX_ENV=${MIX_ENV:-dev}
      - REDIS_ENABLED=${REDIS_ENABLED:-false}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - ELASTICSEARCH_ENABLED=${ELASTICSEARCH_ENABLED:-false}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL:-http://elasticsearch:9200}
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        mix ecto.create &&
        mix ecto.migrate &&
        mix run priv/repo/seeds.exs &&
        mix phx.server
      "

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: